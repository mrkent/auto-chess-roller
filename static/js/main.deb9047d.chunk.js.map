{"version":3,"sources":["logo.svg","App.js","data/rules.js","Roller.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","races","React","Component","unitPool","name","count","cost","Roll","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","imageUrl","chessPiece","display","react_default","a","createElement","Col","style","margin","paddingRight","width","Card","onClick","handlePick","className","Img","variant","src","Body","padding","Title","as","Text","App","_this2","chancesPerLevel","1","2","3","4","5","6","7","8","9","10","level","excludedPieces","lastRoll","currentRoll","bench","pieces","changeLevel","bind","assertThisInitialized","removePiece","removePieceFromPool","rollFive","amount","arguments","length","undefined","setState","pieceIndex","findIndex","unit","prevState","push","index","addPieceToBench","disableCard","_this3","self","Math","random","unitCost","ranNum","chances","i","getUnitCost","unitPoolPerCost","filter","piece","totalUnitsPerCost","includes","reduce","acc","unitCounter","floor","_this4","map","el","rollOne","_this5","_this6","Roller_Roll","console","log","_this7","Button","active","_this8","Fragment","Row","lg","Header","ButtonToolbar","ButtonGroup","aria-label","renderLevelButtons","renderRolls","renderBench","backgroundColor","renderUnitPool","Boolean","window","location","hostname","match","ReactDOM","render","Roller","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.deb9047d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst races = ['Beast', 'Demon', 'Dragon', 'Dwarf', 'Elemental', 'Elf', 'Goblin', 'Satyr', 'Human', 'Ogre', 'Orc', 'Naga', 'Troll', 'Undead', 'God'];\nconst classes = ['Assassin', 'Demon Hunter', 'Druid', 'Knight', 'Hunter', 'Priest', 'Mage', 'Mech', 'Shaman', 'Warlock', 'Warrior'];\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderHeaderRow() {\n    let headerRow = races.map((el) => <Col className=\"cell\">{el}</Col>)\n    \n    return headerRow;\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col className=\"cell\"></Col>\n          {this.renderHeaderRow()}\n        </Row>\n        <Row>\n          <Col className=\"cell\">1 of 2</Col>\n          <Col>2 of 2</Col>\n        </Row>\n        <Row>\n          <Col>1 of 3</Col>\n          <Col>2 of 3</Col>\n          <Col>3 of 3</Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const unitPool = [\n  { name: 'axe', count: 45, cost: 1 },\n  { name: 'enchantress', count: 45, cost: 1 },\n  { name: 'ogremagi', count: 45, cost: 1 },\n  { name: 'tusk', count: 45, cost: 1 },\n  { name: 'drowranger', count: 45, cost: 1 },\n  { name: 'bountyhunter', count: 45, cost: 1 },\n  { name: 'clockwerk', count: 45, cost: 1 },\n  { name: 'shadowshaman', count: 45, cost: 1 },\n  { name: 'batrider', count: 45, cost: 1 },\n  { name: 'tinker', count: 45, cost: 1 },\n  { name: 'antimage', count: 45, cost: 1 },\n  { name: 'tiny', count: 45, cost: 1 },\n  { name: 'mars', count: 45, cost: 1 },\n  { name: 'winterwyvern', count: 45, cost: 1 },\n  { name: 'crystalmaiden', count: 30, cost: 2 },\n  { name: 'beastmaster', count: 30, cost: 2 },\n  { name: 'juggernaut', count: 30, cost: 2 },\n  { name: 'timbersaw', count: 30, cost: 2 },\n  { name: 'queenofpain', count: 30, cost: 2 },\n  { name: 'puck', count: 30, cost: 2 },\n  { name: 'witchdoctor', count: 30, cost: 2 },\n  { name: 'slardar', count: 30, cost: 2 },\n  { name: 'chaosknight', count: 30, cost: 2 },\n  { name: 'morphling', count: 30, cost: 2 },\n  { name: 'luna', count: 30, cost: 2 },\n  { name: 'furion', count: 30, cost: 2 },\n  { name: 'mirana', count: 30, cost: 2 },\n  { name: 'lich', count: 30, cost: 2 },\n  { name: 'lycan', count: 25, cost: 3 },\n  { name: 'venomancer', count: 25, cost: 3 },\n  { name: 'omniknight', count: 25, cost: 3 },\n  { name: 'razor', count: 25, cost: 3 },\n  { name: 'windranger', count: 25, cost: 3 },\n  { name: 'phantomassassin', count: 25, cost: 3 },\n  { name: 'treantprotector', count: 25, cost: 3 },\n  { name: 'abaddon', count: 25, cost: 3 },\n  { name: 'sniper', count: 25, cost: 3 },\n  { name: 'terrorblade', count: 25, cost: 3 },\n  { name: 'viper', count: 25, cost: 3 },\n  { name: 'shadowfiend', count: 25, cost: 3 },\n  { name: 'lina', count: 25, cost: 3 },\n  { name: 'dazzle', count: 25, cost: 3 },\n  { name: 'doom', count: 15, cost: 4 },\n  { name: 'kunkka', count: 15, cost: 4 },\n  { name: 'trollwarlord', count: 15, cost: 4 },\n  { name: 'keeperofthelight', count: 15, cost: 4 },\n  { name: 'necrophos', count: 15, cost: 4 },\n  { name: 'templarassassin', count: 15, cost: 4 },\n  { name: 'alchemist', count: 15, cost: 4 },\n  { name: 'disruptor', count: 15, cost: 4 },\n  { name: 'medusa', count: 15, cost: 4 },\n  { name: 'dragonknight', count: 15, cost: 4 },\n  { name: 'lonedruid', count: 15, cost: 4 },\n  { name: 'gyrocopter', count: 10, cost: 5 },\n  { name: 'tidehunter', count: 10, cost: 5 },\n  { name: 'enigma', count: 10, cost: 5 },\n  { name: 'techies', count: 10, cost: 5 },\n  { name: 'deathprophet', count: 10, cost: 5 },\n  { name: 'zeus', count: 10, cost: 5 },\n  { name: 'sven', count: 10, cost: 5 },\n]\n\nexport default unitPool;\n\nconst unitPool2 = [\n  { name: 'axe', count: 45, cost: 1 },\n  { name: 'enchantress', count: 45, cost: 1 },\n  { name: 'ogremagi', count: 45, cost: 1 },\n  { name: 'crystalmaiden', count: 30, cost: 2 },\n  { name: 'beastmaster', count: 30, cost: 2 },\n  { name: 'juggernaut', count: 30, cost: 2 },\n  { name: 'lycan', count: 25, cost: 3 },\n  { name: 'venomancer', count: 25, cost: 3 },\n  { name: 'omniknight', count: 25, cost: 3 },\n  { name: 'doom', count: 15, cost: 4 },\n  { name: 'kunkka', count: 15, cost: 4 },\n  { name: 'trollwarlord', count: 15, cost: 4 },\n  { name: 'gyrocopter', count: 10, cost: 5 },\n  { name: 'tidehunter', count: 10, cost: 5 },\n  { name: 'enigma', count: 10, cost: 5 },\n];\n\nconst chancesPerLevel = {\n  1: { 1: 1, 2: .00, 3: .00, 4: .00, 5: .00 },\n  2: { 1: .70, 2: .30, 3: .00, 4: .00, 5: .00 },\n  3: { 1: .60, 2: .35, 3: .05, 4: .00, 5: .00 },\n  4: { 1: .50, 2: .35, 3: .15, 4: .00, 5: .00 },\n  5: { 1: .40, 2: .35, 3: .23, 4: .02, 5: .00 },\n  6: { 1: .33, 2: .30, 3: .30, 4: .07, 5: .00 },\n  7: { 1: .30, 2: .30, 3: .30, 4: .10, 5: .00 },\n  8: { 1: .24, 2: .30, 3: .30, 4: .15, 5: .01 },\n  9: { 1: .22, 2: .30, 3: .25, 4: .20, 5: .03 },\n  10: { 1: .19, 2: .25, 3: .25, 4: .25, 5: .06 }\n}\n\nclass Pool {\n  constructor(level = 8, excludedPieces = []) {\n    this.pieces = [\n      { name: 'axe', count: 45, cost: 1 },\n      { name: 'enchantress', count: 45, cost: 1 },\n      { name: 'ogremagi', count: 45, cost: 1 },\n      { name: 'tusk', count: 45, cost: 1 },\n      { name: 'drowranger', count: 45, cost: 1 },\n      { name: 'bountyhunter', count: 45, cost: 1 },\n      { name: 'clockwerk', count: 45, cost: 1 },\n      { name: 'shadowshaman', count: 45, cost: 1 },\n      { name: 'batrider', count: 45, cost: 1 },\n      { name: 'tinker', count: 45, cost: 1 },\n      { name: 'antimage', count: 45, cost: 1 },\n      { name: 'tiny', count: 45, cost: 1 },\n      { name: 'mars', count: 45, cost: 1 },\n      { name: 'crystalmaiden', count: 30, cost: 2 },\n      { name: 'beastmaster', count: 30, cost: 2 },\n      { name: 'juggernaut', count: 30, cost: 2 },\n      { name: 'timbersaw', count: 30, cost: 2 },\n      { name: 'queenofpain', count: 30, cost: 2 },\n      { name: 'puck', count: 30, cost: 2 },\n      { name: 'witchdoctor', count: 30, cost: 2 },\n      { name: 'slardar', count: 30, cost: 2 },\n      { name: 'chaosknight', count: 30, cost: 2 },\n      { name: 'morphling', count: 30, cost: 2 },\n      { name: 'luna', count: 30, cost: 2 },\n      { name: 'furion', count: 30, cost: 2 },\n      { name: 'mirana', count: 30, cost: 2 },\n      { name: 'lich', count: 30, cost: 2 },\n      { name: 'lycan', count: 25, cost: 3 },\n      { name: 'venomancer', count: 25, cost: 3 },\n      { name: 'omniknight', count: 25, cost: 3 },\n      { name: 'razor', count: 25, cost: 3 },\n      { name: 'windranger', count: 25, cost: 3 },\n      { name: 'phantomassassin', count: 25, cost: 3 },\n      { name: 'treantprotector', count: 25, cost: 3 },\n      { name: 'abaddon', count: 25, cost: 3 },\n      { name: 'sniper', count: 25, cost: 3 },\n      { name: 'terrorblade', count: 25, cost: 3 },\n      { name: 'viper', count: 25, cost: 3 },\n      { name: 'shadowfiend', count: 25, cost: 3 },\n      { name: 'lina', count: 25, cost: 3 },\n      { name: 'dazzle', count: 25, cost: 3 },\n      { name: 'doom', count: 15, cost: 4 },\n      { name: 'kunkka', count: 15, cost: 4 },\n      { name: 'trollwarlord', count: 15, cost: 4 },\n      { name: 'keeperofthelight', count: 15, cost: 4 },\n      { name: 'necrophos', count: 15, cost: 4 },\n      { name: 'templarassassin', count: 15, cost: 4 },\n      { name: 'alchemist', count: 15, cost: 4 },\n      { name: 'disruptor', count: 15, cost: 4 },\n      { name: 'medusa', count: 15, cost: 4 },\n      { name: 'dragonknight', count: 15, cost: 4 },\n      { name: 'lonedruid', count: 15, cost: 4 },\n      { name: 'gyrocopter', count: 10, cost: 5 },\n      { name: 'tidehunter', count: 10, cost: 5 },\n      { name: 'enigma', count: 10, cost: 5 },\n      { name: 'techies', count: 10, cost: 5 },\n      { name: 'deathprophet', count: 10, cost: 5 },\n      { name: 'zeus', count: 10, cost: 5 },\n    ]\n    this.chancesPerLevel = {\n      1: { 1: 1, 2: .00, 3: .00, 4: .00, 5: .00 },\n      2: { 1: .70, 2: .30, 3: .00, 4: .00, 5: .00 },\n      3: { 1: .60, 2: .35, 3: .05, 4: .00, 5: .00 },\n      4: { 1: .50, 2: .35, 3: .15, 4: .00, 5: .00 },\n      5: { 1: .40, 2: .35, 3: .23, 4: .02, 5: .00 },\n      6: { 1: .33, 2: .30, 3: .30, 4: .07, 5: .00 },\n      7: { 1: .30, 2: .30, 3: .30, 4: .10, 5: .00 },\n      8: { 1: .24, 2: .30, 3: .30, 4: .15, 5: .01 },\n      9: { 1: .22, 2: .30, 3: .25, 4: .20, 5: .03 },\n      10: { 1: .19, 2: .25, 3: .25, 4: .25, 5: .06 }\n    }\n    this.level = level;\n    this.excludedPieces = excludedPieces;\n    this.lastRoll = [];\n  }\n\n  removePiece(name, amount = 1) {\n    this.pieces[name] -= amount;\n  }\n\n  setPieceAmount(name, amount) {\n    this.pieces[name] = amount;\n  }\n\n  changeLevel(level = 8) {\n    if (level >= 1 && level <= 10) {\n      this.level = level;\n    }\n  }\n\n  rollOne() {\n    const self = this;\n    function getUnitCost() {\n      let ranNum = Math.random();\n      const chances = self.chancesPerLevel[self.level];\n\n      for (let i = 1; i <= 5; i++) {\n        if (ranNum <= chances[i]) {\n          return i;\n        }\n        ranNum -= chances[i];\n      }\n    }\n\n    const isIo = Math.random() <= 0.003;\n    if (isIo) return { name: 'io', count: 0, cost: 5 };\n\n    const unitCost = getUnitCost();\n    let unitPoolPerCost = this.pieces.filter(piece => piece.cost === unitCost);\n    unitPoolPerCost = unitPoolPerCost.filter(piece => !this.excludedPieces.includes(piece.name))\n\n    const totalUnitsPerCost = unitPoolPerCost.reduce((acc, piece) => acc + piece.count, 0)\n\n    let unitCounter = Math.floor(Math.random() * totalUnitsPerCost);\n\n    for (let i = 0; i < unitPoolPerCost.length; i++) {\n      if (unitCounter < unitPoolPerCost[i].count) {\n        return unitPoolPerCost[i];\n      }\n      unitCounter -= unitPoolPerCost[i].count\n    }\n  }\n\n  rollTwenty() {\n    for (let i = 0; i < 20; i++) {\n      console.log(this.rollOne());\n    }\n  }\n}\n","import React from 'react';\nimport { Container, Row, Col, Card, Button, Navbar, Form, InputGroup, FormControl, ButtonToolbar, ButtonGroup } from 'react-bootstrap';\nimport unitPool from './data/rules.js'\n\nclass Roll extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const imageUrl = this.props.imageUrl || 'https://via.placeholder.com/140x80';\n    const chessPiece = this.props.chessPiece || 'Axe';\n    const cost = this.props.cost || 1;\n    const display = this.props.display || 'inherit';\n    return (\n      <Col style={{ margin: '10px 2px 10px 2px', paddingRight: '0px' }}>\n        <div style={{ width: '140px' }}>\n          <Card onClick={this.props.handlePick} className=\"text-center\" style={{ width: '140px', display: display }}>\n            <Card.Img variant=\"top\" src={imageUrl} />\n            <Card.Body style={{ padding: '5px' }}>\n              <Card.Title as='h6'>{chessPiece}</Card.Title>\n              <Card.Text>\n                ${this.props.cost}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </div>\n      </Col>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chancesPerLevel = {\n      1: { 1: 1, 2: .00, 3: .00, 4: .00, 5: .00 },\n      2: { 1: .70, 2: .30, 3: .00, 4: .00, 5: .00 },\n      3: { 1: .60, 2: .35, 3: .05, 4: .00, 5: .00 },\n      4: { 1: .50, 2: .35, 3: .15, 4: .00, 5: .00 },\n      5: { 1: .40, 2: .35, 3: .23, 4: .02, 5: .00 },\n      6: { 1: .33, 2: .30, 3: .30, 4: .07, 5: .00 },\n      7: { 1: .30, 2: .30, 3: .30, 4: .10, 5: .00 },\n      8: { 1: .24, 2: .30, 3: .30, 4: .15, 5: .01 },\n      9: { 1: .22, 2: .30, 3: .25, 4: .20, 5: .03 },\n      10: { 1: .19, 2: .25, 3: .25, 4: .25, 5: .06 }\n    }\n\n    this.state = {\n      level: this.props.level || 1,\n      excludedPieces: this.props.excludedPieces || [],\n      lastRoll: [],\n      currentRoll: [],\n      bench: [],\n      pieces: unitPool\n    };\n\n    this.changeLevel = this.changeLevel.bind(this);\n    this.removePiece = this.removePieceFromPool.bind(this);\n    this.handlePick = this.handlePick.bind(this);\n  }\n\n  componentDidMount() {\n    this.rollFive();\n  }\n\n  removePieceFromPool(name, amount = 1) {\n    this.setState((state, props) => {\n      const pieces = state.pieces;\n      const pieceIndex = pieces.findIndex(unit => unit.name === name);\n      if (pieceIndex !== -1) {\n        if (amount < pieces[pieceIndex].count) {\n          pieces[pieceIndex].count -= amount;\n        } else {\n          pieces[pieceIndex].count = 0;\n        }\n      }\n      return { pieces };\n    })\n  }\n\n  addPieceToBench(name, cost, amount = 1) {\n    this.setState(prevState => {\n      const bench = prevState.bench;\n      const pieceIndex = bench.findIndex(unit => unit.name === name);\n      if (pieceIndex !== -1) {\n        bench[pieceIndex].count += amount;\n      } else {\n        bench.push({\n          name,\n          count: 1,\n          cost\n        })\n      }\n      return { bench };\n    })\n  }\n\n  changeLevel(level = 1) {\n    if (level >= 1 && level <= 10) {\n      this.setState({ level });\n    }\n  }\n\n  handlePick(name, cost, index) {\n    this.addPieceToBench(name, cost);\n    this.removePieceFromPool(name);\n    this.disableCard(index);\n  }\n\n  rollOne() {\n    const self = this;\n    function getUnitCost() {\n      let ranNum = Math.random();\n      const chances = self.chancesPerLevel[self.state.level];\n\n      for (let i = 1; i <= 5; i++) {\n        if (ranNum <= chances[i]) {\n          return i;\n        }\n        ranNum -= chances[i];\n      }\n    }\n\n    const isIo = Math.random() <= 0.003;\n    if (isIo) return { name: 'io', count: 0, cost: 5 };\n\n    const unitCost = getUnitCost();\n    let unitPoolPerCost = this.state.pieces.filter(piece => piece.cost === unitCost);\n    unitPoolPerCost = unitPoolPerCost.filter(piece => !this.state.excludedPieces.includes(piece.name))\n\n    const totalUnitsPerCost = unitPoolPerCost.reduce((acc, piece) => acc + piece.count, 0)\n\n    let unitCounter = Math.floor(Math.random() * totalUnitsPerCost);\n\n    for (let i = 0; i < unitPoolPerCost.length; i++) {\n      if (unitCounter < unitPoolPerCost[i].count) {\n        return {\n          name: unitPoolPerCost[i].name,\n          cost: unitPoolPerCost[i].cost\n        };\n      }\n      unitCounter -= unitPoolPerCost[i].count\n    }\n  }\n\n  rollFive() {\n    const currentRoll = [0, 1, 2, 3, 4].map(el => this.rollOne())\n    this.setState({ currentRoll });\n  }\n\n  renderUnitPool() {\n    return this.state.pieces.map(unit => {\n      return (\n        <li onClick={() => this.removePieceFromPool()}>\n          {unit.name}: {unit.count}\n        </li>\n      )\n    })\n  }\n\n  renderBench() {\n    return this.state.bench.map(unit => {\n      return (\n        <li>\n          {unit.name}: {unit.count}\n        </li>\n      )\n    })\n  }\n\n  renderRolls() {\n    return this.state.currentRoll.map((el, index) => {\n      return (\n        <Roll handlePick={() => { this.handlePick(el.name, el.cost, index) }} chessPiece={el.name} cost={el.cost} display={el.display || 'inherit'}></Roll>\n      )\n    })\n  }\n\n  disableCard(index) {\n    console.log(index, this.state);\n    this.setState(prevState => {\n      const currentRoll = prevState.currentRoll;\n      currentRoll[index].display = 'none';\n      console.log(index, currentRoll);\n      return { currentRoll };\n    })\n  }\n\n  renderLevelButtons() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(el => {\n      if (el === this.state.level) {\n        return (\n          <Button active onClick={() => { this.changeLevel(el) }}>{el}</Button>\n        )\n      }\n      return (\n        <Button onClick={() => { this.changeLevel(el) }}>{el}</Button>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <Row>\n          <Col lg={8}>\n            <Card style={{ margin: '2px' }}>\n              <Card.Header className=\"justify-content-between\">\n                <ButtonToolbar className=\"justify-content-between\">\n                  <Button onClick={() => {this.rollFive()}}>Re-roll</Button>\n                  <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\n                    {this.renderLevelButtons()}\n                  </ButtonGroup>\n                </ButtonToolbar>\n              </Card.Header>\n              <Row>\n                {this.renderRolls()}\n              </Row>\n            </Card>\n            <div>\n              board+bench:\n              <ul>\n                {this.renderBench()}\n              </ul>\n            </div>\n          </Col>\n          <Col lg={4} style={{ backgroundColor: 'lightblue'}}>\n            Will be able to modify unit pool here.\n            <br></br>\n            <ol>\n              {this.renderUnitPool()}\n            </ol>\n          </Col>\n        </Row>\n      </>\n\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Roller from './Roller';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Roller />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}